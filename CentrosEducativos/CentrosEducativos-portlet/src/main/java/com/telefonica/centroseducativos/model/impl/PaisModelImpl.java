package com.telefonica.centroseducativos.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.telefonica.centroseducativos.model.Pais;
import com.telefonica.centroseducativos.model.PaisModel;
import com.telefonica.centroseducativos.model.PaisSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Pais service. Represents a row in the &quot;CentrosEducativos_Pais&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.telefonica.centroseducativos.model.PaisModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaisImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PaisImpl
 * @see com.telefonica.centroseducativos.model.Pais
 * @see com.telefonica.centroseducativos.model.PaisModel
 * @generated
 */
@JSON(strict = true)
public class PaisModelImpl extends BaseModelImpl<Pais> implements PaisModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a pais model instance should use the {@link com.telefonica.centroseducativos.model.Pais} interface instead.
     */
    public static final String TABLE_NAME = "CentrosEducativos_Pais";
    public static final Object[][] TABLE_COLUMNS = {
            { "idpais", Types.INTEGER },
            { "nombrepais", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table CentrosEducativos_Pais (idpais INTEGER not null primary key,nombrepais VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table CentrosEducativos_Pais";
    public static final String ORDER_BY_JPQL = " ORDER BY pais.idpais ASC";
    public static final String ORDER_BY_SQL = " ORDER BY CentrosEducativos_Pais.idpais ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.telefonica.centroseducativos.model.Pais"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.telefonica.centroseducativos.model.Pais"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.telefonica.centroseducativos.model.Pais"));
    private static ClassLoader _classLoader = Pais.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Pais.class };
    private int _idpais;
    private String _nombrepais;
    private Pais _escapedModel;

    public PaisModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Pais toModel(PaisSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Pais model = new PaisImpl();

        model.setIdpais(soapModel.getIdpais());
        model.setNombrepais(soapModel.getNombrepais());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Pais> toModels(PaisSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Pais> models = new ArrayList<Pais>(soapModels.length);

        for (PaisSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _idpais;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setIdpais(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _idpais;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Pais.class;
    }

    @Override
    public String getModelClassName() {
        return Pais.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("idpais", getIdpais());
        attributes.put("nombrepais", getNombrepais());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer idpais = (Integer) attributes.get("idpais");

        if (idpais != null) {
            setIdpais(idpais);
        }

        String nombrepais = (String) attributes.get("nombrepais");

        if (nombrepais != null) {
            setNombrepais(nombrepais);
        }
    }

    @JSON
    @Override
    public int getIdpais() {
        return _idpais;
    }

    @Override
    public void setIdpais(int idpais) {
        _idpais = idpais;
    }

    @JSON
    @Override
    public String getNombrepais() {
        if (_nombrepais == null) {
            return StringPool.BLANK;
        } else {
            return _nombrepais;
        }
    }

    @Override
    public void setNombrepais(String nombrepais) {
        _nombrepais = nombrepais;
    }

    @Override
    public Pais toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Pais) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PaisImpl paisImpl = new PaisImpl();

        paisImpl.setIdpais(getIdpais());
        paisImpl.setNombrepais(getNombrepais());

        paisImpl.resetOriginalValues();

        return paisImpl;
    }

    @Override
    public int compareTo(Pais pais) {
        int primaryKey = pais.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Pais)) {
            return false;
        }

        Pais pais = (Pais) obj;

        int primaryKey = pais.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Pais> toCacheModel() {
        PaisCacheModel paisCacheModel = new PaisCacheModel();

        paisCacheModel.idpais = getIdpais();

        paisCacheModel.nombrepais = getNombrepais();

        String nombrepais = paisCacheModel.nombrepais;

        if ((nombrepais != null) && (nombrepais.length() == 0)) {
            paisCacheModel.nombrepais = null;
        }

        return paisCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{idpais=");
        sb.append(getIdpais());
        sb.append(", nombrepais=");
        sb.append(getNombrepais());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.telefonica.centroseducativos.model.Pais");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>idpais</column-name><column-value><![CDATA[");
        sb.append(getIdpais());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nombrepais</column-name><column-value><![CDATA[");
        sb.append(getNombrepais());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
