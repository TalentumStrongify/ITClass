package com.telefonica.centroseducativos.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.telefonica.centroseducativos.model.PreguntasEncuesta;
import com.telefonica.centroseducativos.model.PreguntasEncuestaModel;
import com.telefonica.centroseducativos.model.PreguntasEncuestaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PreguntasEncuesta service. Represents a row in the &quot;CentrosEducativos_PreguntasEncuesta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.telefonica.centroseducativos.model.PreguntasEncuestaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PreguntasEncuestaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PreguntasEncuestaImpl
 * @see com.telefonica.centroseducativos.model.PreguntasEncuesta
 * @see com.telefonica.centroseducativos.model.PreguntasEncuestaModel
 * @generated
 */
@JSON(strict = true)
public class PreguntasEncuestaModelImpl extends BaseModelImpl<PreguntasEncuesta>
    implements PreguntasEncuestaModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a preguntas encuesta model instance should use the {@link com.telefonica.centroseducativos.model.PreguntasEncuesta} interface instead.
     */
    public static final String TABLE_NAME = "CentrosEducativos_PreguntasEncuesta";
    public static final Object[][] TABLE_COLUMNS = {
            { "numpregunta", Types.INTEGER },
            { "enunciadopregunta", Types.VARCHAR },
            { "idcategoria", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table CentrosEducativos_PreguntasEncuesta (numpregunta INTEGER not null primary key,enunciadopregunta VARCHAR(75) null,idcategoria LONG)";
    public static final String TABLE_SQL_DROP = "drop table CentrosEducativos_PreguntasEncuesta";
    public static final String ORDER_BY_JPQL = " ORDER BY preguntasEncuesta.numpregunta ASC";
    public static final String ORDER_BY_SQL = " ORDER BY CentrosEducativos_PreguntasEncuesta.numpregunta ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.telefonica.centroseducativos.model.PreguntasEncuesta"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.telefonica.centroseducativos.model.PreguntasEncuesta"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.telefonica.centroseducativos.model.PreguntasEncuesta"));
    private static ClassLoader _classLoader = PreguntasEncuesta.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            PreguntasEncuesta.class
        };
    private int _numpregunta;
    private String _enunciadopregunta;
    private long _idcategoria;
    private PreguntasEncuesta _escapedModel;

    public PreguntasEncuestaModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static PreguntasEncuesta toModel(PreguntasEncuestaSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        PreguntasEncuesta model = new PreguntasEncuestaImpl();

        model.setNumpregunta(soapModel.getNumpregunta());
        model.setEnunciadopregunta(soapModel.getEnunciadopregunta());
        model.setIdcategoria(soapModel.getIdcategoria());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<PreguntasEncuesta> toModels(
        PreguntasEncuestaSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<PreguntasEncuesta> models = new ArrayList<PreguntasEncuesta>(soapModels.length);

        for (PreguntasEncuestaSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _numpregunta;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setNumpregunta(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _numpregunta;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return PreguntasEncuesta.class;
    }

    @Override
    public String getModelClassName() {
        return PreguntasEncuesta.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("numpregunta", getNumpregunta());
        attributes.put("enunciadopregunta", getEnunciadopregunta());
        attributes.put("idcategoria", getIdcategoria());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer numpregunta = (Integer) attributes.get("numpregunta");

        if (numpregunta != null) {
            setNumpregunta(numpregunta);
        }

        String enunciadopregunta = (String) attributes.get("enunciadopregunta");

        if (enunciadopregunta != null) {
            setEnunciadopregunta(enunciadopregunta);
        }

        Long idcategoria = (Long) attributes.get("idcategoria");

        if (idcategoria != null) {
            setIdcategoria(idcategoria);
        }
    }

    @JSON
    @Override
    public int getNumpregunta() {
        return _numpregunta;
    }

    @Override
    public void setNumpregunta(int numpregunta) {
        _numpregunta = numpregunta;
    }

    @JSON
    @Override
    public String getEnunciadopregunta() {
        if (_enunciadopregunta == null) {
            return StringPool.BLANK;
        } else {
            return _enunciadopregunta;
        }
    }

    @Override
    public void setEnunciadopregunta(String enunciadopregunta) {
        _enunciadopregunta = enunciadopregunta;
    }

    @JSON
    @Override
    public long getIdcategoria() {
        return _idcategoria;
    }

    @Override
    public void setIdcategoria(long idcategoria) {
        _idcategoria = idcategoria;
    }

    @Override
    public PreguntasEncuesta toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (PreguntasEncuesta) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PreguntasEncuestaImpl preguntasEncuestaImpl = new PreguntasEncuestaImpl();

        preguntasEncuestaImpl.setNumpregunta(getNumpregunta());
        preguntasEncuestaImpl.setEnunciadopregunta(getEnunciadopregunta());
        preguntasEncuestaImpl.setIdcategoria(getIdcategoria());

        preguntasEncuestaImpl.resetOriginalValues();

        return preguntasEncuestaImpl;
    }

    @Override
    public int compareTo(PreguntasEncuesta preguntasEncuesta) {
        int primaryKey = preguntasEncuesta.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof PreguntasEncuesta)) {
            return false;
        }

        PreguntasEncuesta preguntasEncuesta = (PreguntasEncuesta) obj;

        int primaryKey = preguntasEncuesta.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<PreguntasEncuesta> toCacheModel() {
        PreguntasEncuestaCacheModel preguntasEncuestaCacheModel = new PreguntasEncuestaCacheModel();

        preguntasEncuestaCacheModel.numpregunta = getNumpregunta();

        preguntasEncuestaCacheModel.enunciadopregunta = getEnunciadopregunta();

        String enunciadopregunta = preguntasEncuestaCacheModel.enunciadopregunta;

        if ((enunciadopregunta != null) && (enunciadopregunta.length() == 0)) {
            preguntasEncuestaCacheModel.enunciadopregunta = null;
        }

        preguntasEncuestaCacheModel.idcategoria = getIdcategoria();

        return preguntasEncuestaCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(7);

        sb.append("{numpregunta=");
        sb.append(getNumpregunta());
        sb.append(", enunciadopregunta=");
        sb.append(getEnunciadopregunta());
        sb.append(", idcategoria=");
        sb.append(getIdcategoria());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(13);

        sb.append("<model><model-name>");
        sb.append("com.telefonica.centroseducativos.model.PreguntasEncuesta");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>numpregunta</column-name><column-value><![CDATA[");
        sb.append(getNumpregunta());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>enunciadopregunta</column-name><column-value><![CDATA[");
        sb.append(getEnunciadopregunta());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>idcategoria</column-name><column-value><![CDATA[");
        sb.append(getIdcategoria());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
